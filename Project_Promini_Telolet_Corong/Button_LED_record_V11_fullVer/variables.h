//========================================AT24C256 SETUP=======================================//
#define EEPROM_ADDR 0x50 // I2C address of AT24C256
#define ARRAY_SIZE_X 6   // Assuming your array size is 6x24
#define ARRAY_SIZE_Y 24

//========================================PCF8574 SETUP=======================================//
const byte pcfPushButtonPins[] = {0, 1, 2, 3, 4, 5};   // Pins for the push buttons on PCF8574
const byte pcfSwitchPins[] = {6, 7};                // Pins for the toggle switches on PCF8574

unsigned int buttonMillis;
unsigned int switchMillis;
bool previousButtonStates[6] = {false};
bool previousSwitchStates[2] = {false};

//========================================74HC595 SETUP=======================================//
#define DATA_PIN 10
#define LATCH_PIN 11
#define CLOCK_PIN 12

//=========================================DISPLAY VARS=======================================//
 const byte putar[7] = {B01000000, B00100000, B00010000, B00000010, B00000100, B00001000, B00000000}; 
 const byte blank = B00000000;
 const byte r = B10010111;
 const byte p = B00000111;
 const byte l = B01001100;
 const byte t = B00110011;
 
 const byte commonAnodeSegments[] = {
    B10000001, // 0
    B11101101, // 1
    B01000011, // 2
    B01001001, // 3
    B00101101, // 4
    B00011001, // 5
    B00010001, // 6
    B11001101, // 7
    B00000001, // 8
    B00001001  // 9
  };
 const byte commonCathodeSegments[] = {
    B01111110, // 0
    B00010010, // 1
    B10111100, // 2
    B10110110, // 3
    B11010010, // 4
    B11100110, // 5
    B11101110, // 6
    B00110010, // 7
    B11111110, // 8
    B11110110  // 9
};


//========================================RECORDING SETUP=======================================//
uint8_t led[] = {7, 6, 5, 4, 3, 2};
const uint8_t but[] = {8, 9, A0, A1, A2, A3};

bool buttonState[6] = {LOW};

bool recordMod = 0;
bool playMod = 0;

uint8_t num = 0;
uint16_t maxNum = 6;

uint8_t maxSpd = 19;
uint8_t spd = 10;

uint16_t relPlayPause[6][24] = {0};
uint16_t relRepPlayPause[6][24] = {0};

bool isRecording = false;
bool isSaved = false;
bool isPlaying;

//======================================OLED DISPLAY VARS======================================//
//static const unsigned char image_Hidden_window_bits[] U8X8_PROGMEM = {0xfe, 0x01, 0x7e, 0x01, 0xfe, 0x01, 0x02, 0x01, 0x7f, 0x01, 0x41, 0x01, 0xc1, 0x01, 0x7f, 0x00};
//static const unsigned char image_arrow_curved_left_down_up_bits[] U8X8_PROGMEM = {0x04, 0x06, 0x1f, 0x36, 0x44};
//static const unsigned char image_Pin_arrow_left_bits[] U8X8_PROGMEM = {0x08, 0x00, 0x0c, 0x00, 0xfe, 0x01, 0xff, 0x01, 0xfe, 0x01, 0x0c, 0x00, 0x08, 0x00};
//static const unsigned char image_Pin_arrow_right_bits[] U8X8_PROGMEM = {0x20, 0x00, 0x60, 0x00, 0xff, 0x00, 0xff, 0x01, 0xff, 0x00, 0x60, 0x00, 0x20, 0x00};
//
//const unsigned char logoLOGOV2 [] PROGMEM = {
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
//  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
//  0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
//  0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
//  0x00, 0x80, 0x0f, 0x00, 0x06, 0xf0, 0xff, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0xfe, 0x00, 0xc0, 0x03,
//  0x00, 0x00, 0x0f, 0x00, 0x0e, 0xf0, 0xff, 0x1f, 0x30, 0x00, 0x18, 0x00, 0xfc, 0x01, 0xe0, 0x01,
//  0x00, 0x00, 0x1f, 0x00, 0x1f, 0xf8, 0xff, 0x1f, 0x38, 0x00, 0x38, 0x00, 0xf8, 0x03, 0xe0, 0x01,
//  0x00, 0x00, 0x0f, 0x80, 0x0f, 0xfc, 0xff, 0x1f, 0x1c, 0x18, 0x1c, 0x08, 0xf8, 0x01, 0xf8, 0x01,
//  0x00, 0x80, 0x0f, 0xc0, 0x0f, 0xfe, 0xff, 0x0f, 0x1c, 0x3c, 0x1e, 0x1c, 0xfc, 0x00, 0xf8, 0x00,
//  0x00, 0x80, 0x07, 0xc0, 0x0f, 0xfe, 0xff, 0x0f, 0x1e, 0xfc, 0x0f, 0x0c, 0xfc, 0x00, 0x98, 0x00,
//  0x00, 0xc0, 0x03, 0xc1, 0x07, 0xff, 0xff, 0x0f, 0x1e, 0x00, 0x0e, 0x00, 0x7e, 0x10, 0x18, 0x00,
//  0x00, 0xe0, 0x83, 0xc0, 0x07, 0xff, 0x03, 0x06, 0x1f, 0x00, 0x0e, 0x00, 0x3f, 0x10, 0x18, 0x00,
//  0x00, 0xe0, 0x01, 0xc0, 0x03, 0xff, 0x01, 0x07, 0x3f, 0x00, 0x06, 0x80, 0x3f, 0x00, 0x1c, 0x00,
//  0x00, 0xf0, 0x00, 0xe0, 0x83, 0xff, 0x01, 0x03, 0xff, 0x07, 0x07, 0x81, 0x1f, 0x00, 0x1c, 0x00,
//  0x00, 0xf8, 0x00, 0xe0, 0x83, 0xc1, 0xff, 0x83, 0x07, 0x07, 0x07, 0x03, 0x1f, 0x00, 0x7c, 0x00,
//  0x00, 0x7c, 0x60, 0xe0, 0x81, 0xc1, 0xff, 0x83, 0x07, 0x83, 0x03, 0x03, 0x0f, 0x0c, 0x3c, 0x00,
//  0x00, 0x3f, 0x70, 0xc0, 0x00, 0xe0, 0xff, 0x01, 0x03, 0x80, 0x01, 0x03, 0x07, 0x0e, 0x38, 0x00,
//  0x80, 0x1f, 0x70, 0x40, 0x00, 0xe0, 0xff, 0x80, 0x03, 0xc0, 0x00, 0x01, 0x03, 0x0f, 0x18, 0x00,
//  0xe0, 0x0f, 0x78, 0x20, 0x00, 0xf0, 0x7f, 0xc0, 0x01, 0x60, 0x80, 0x81, 0x01, 0x0f, 0x1c, 0x00,
//  0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
//  0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00,
//  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xf0, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xf0, 0x2e, 0x1c, 0x51, 0x11, 0x61, 0x74, 0x0c, 0xc2, 0xc4, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xb0, 0x2e, 0x1c, 0x00, 0x00, 0x60, 0x10, 0x0c, 0x00, 0x40, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x30, 0x3f, 0x9e, 0x80, 0xaa, 0x6a, 0x54, 0xec, 0x15, 0x45, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xf0, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x1f, 0xdf, 0x73, 0xdc, 0x3c, 0x6e, 0x78, 0x70, 0x80, 0xe7, 0xf1, 0xf1, 0xc3, 0xe3, 0x00,
//  0x00, 0x1f, 0xff, 0x7b, 0xff, 0x3d, 0x7f, 0xfc, 0xf8, 0x80, 0xe7, 0xf9, 0xf3, 0xcf, 0xf7, 0x00,
//  0x00, 0xbe, 0xcf, 0x71, 0xef, 0x9d, 0x7f, 0xf8, 0x70, 0x00, 0xe7, 0xbc, 0x77, 0x8e, 0xe7, 0x00,
//  0x00, 0xbe, 0xcf, 0x71, 0xcf, 0x9c, 0x63, 0xfc, 0x70, 0x00, 0xe7, 0x1c, 0x67, 0x8e, 0x6f, 0x00,
//  0x00, 0xfe, 0xcf, 0x71, 0x3f, 0x9c, 0x03, 0xcc, 0x71, 0x00, 0xff, 0x1c, 0xe7, 0x87, 0x7f, 0x00,
//  0x00, 0xfe, 0xcf, 0x71, 0xfc, 0x9c, 0x03, 0xfc, 0x71, 0x00, 0xff, 0x1c, 0xe7, 0x87, 0x7f, 0x00,
//  0x00, 0xf6, 0xcd, 0x31, 0xf3, 0x9d, 0x03, 0xfe, 0x71, 0x06, 0xe7, 0x1c, 0x67, 0x8e, 0x7d, 0x00,
//  0x00, 0xf6, 0x8e, 0x3b, 0xe7, 0x9d, 0x67, 0xce, 0x73, 0x06, 0xe7, 0xbc, 0x77, 0x9e, 0x79, 0x00,
//  0x00, 0xff, 0x9e, 0x3f, 0xff, 0x3c, 0x7f, 0xcf, 0xff, 0x87, 0xe7, 0xf9, 0xf3, 0xde, 0x73, 0x00,
//  0x00, 0xef, 0x1e, 0x1f, 0x7b, 0x3c, 0x3e, 0xcf, 0xff, 0x87, 0xe7, 0xf1, 0xf1, 0xdc, 0x73, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
//};
