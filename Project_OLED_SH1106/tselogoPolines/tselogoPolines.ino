#include <Arduino.h>
#include <U8g2lib.h>
#include <SPI.h>

#include <Wire.h> // library requires for IIC communication
U8G2_SH1106_128X64_NONAME_1_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

static const unsigned char image_Hidden_window_bits[] U8X8_PROGMEM = {0xfe, 0x01, 0x7e, 0x01, 0xfe, 0x01, 0x02, 0x01, 0x7f, 0x01, 0x41, 0x01, 0xc1, 0x01, 0x7f, 0x00};
static const unsigned char image_arrow_curved_left_down_up_bits[] U8X8_PROGMEM = {0x04, 0x06, 0x1f, 0x36, 0x44};
static const unsigned char image_Pin_arrow_left_bits[] U8X8_PROGMEM = {0x08, 0x00, 0x0c, 0x00, 0xfe, 0x01, 0xff, 0x01, 0xfe, 0x01, 0x0c, 0x00, 0x08, 0x00};
static const unsigned char image_Pin_arrow_right_bits[] U8X8_PROGMEM = {0x20, 0x00, 0x60, 0x00, 0xff, 0x00, 0xff, 0x01, 0xff, 0x00, 0x60, 0x00, 0x20, 0x00};

const unsigned char logoLOGOV2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
  0x00, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
  0x00, 0x80, 0x0f, 0x00, 0x06, 0xf0, 0xff, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0xfe, 0x00, 0xc0, 0x03,
  0x00, 0x00, 0x0f, 0x00, 0x0e, 0xf0, 0xff, 0x1f, 0x30, 0x00, 0x18, 0x00, 0xfc, 0x01, 0xe0, 0x01,
  0x00, 0x00, 0x1f, 0x00, 0x1f, 0xf8, 0xff, 0x1f, 0x38, 0x00, 0x38, 0x00, 0xf8, 0x03, 0xe0, 0x01,
  0x00, 0x00, 0x0f, 0x80, 0x0f, 0xfc, 0xff, 0x1f, 0x1c, 0x18, 0x1c, 0x08, 0xf8, 0x01, 0xf8, 0x01,
  0x00, 0x80, 0x0f, 0xc0, 0x0f, 0xfe, 0xff, 0x0f, 0x1c, 0x3c, 0x1e, 0x1c, 0xfc, 0x00, 0xf8, 0x00,
  0x00, 0x80, 0x07, 0xc0, 0x0f, 0xfe, 0xff, 0x0f, 0x1e, 0xfc, 0x0f, 0x0c, 0xfc, 0x00, 0x98, 0x00,
  0x00, 0xc0, 0x03, 0xc1, 0x07, 0xff, 0xff, 0x0f, 0x1e, 0x00, 0x0e, 0x00, 0x7e, 0x10, 0x18, 0x00,
  0x00, 0xe0, 0x83, 0xc0, 0x07, 0xff, 0x03, 0x06, 0x1f, 0x00, 0x0e, 0x00, 0x3f, 0x10, 0x18, 0x00,
  0x00, 0xe0, 0x01, 0xc0, 0x03, 0xff, 0x01, 0x07, 0x3f, 0x00, 0x06, 0x80, 0x3f, 0x00, 0x1c, 0x00,
  0x00, 0xf0, 0x00, 0xe0, 0x83, 0xff, 0x01, 0x03, 0xff, 0x07, 0x07, 0x81, 0x1f, 0x00, 0x1c, 0x00,
  0x00, 0xf8, 0x00, 0xe0, 0x83, 0xc1, 0xff, 0x83, 0x07, 0x07, 0x07, 0x03, 0x1f, 0x00, 0x7c, 0x00,
  0x00, 0x7c, 0x60, 0xe0, 0x81, 0xc1, 0xff, 0x83, 0x07, 0x83, 0x03, 0x03, 0x0f, 0x0c, 0x3c, 0x00,
  0x00, 0x3f, 0x70, 0xc0, 0x00, 0xe0, 0xff, 0x01, 0x03, 0x80, 0x01, 0x03, 0x07, 0x0e, 0x38, 0x00,
  0x80, 0x1f, 0x70, 0x40, 0x00, 0xe0, 0xff, 0x80, 0x03, 0xc0, 0x00, 0x01, 0x03, 0x0f, 0x18, 0x00,
  0xe0, 0x0f, 0x78, 0x20, 0x00, 0xf0, 0x7f, 0xc0, 0x01, 0x60, 0x80, 0x81, 0x01, 0x0f, 0x1c, 0x00,
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x2e, 0x1c, 0x51, 0x11, 0x61, 0x74, 0x0c, 0xc2, 0xc4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xb0, 0x2e, 0x1c, 0x00, 0x00, 0x60, 0x10, 0x0c, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0x3f, 0x9e, 0x80, 0xaa, 0x6a, 0x54, 0xec, 0x15, 0x45, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x70, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xdf, 0x73, 0xdc, 0x3c, 0x6e, 0x78, 0x70, 0x80, 0xe7, 0xf1, 0xf1, 0xc3, 0xe3, 0x00,
  0x00, 0x1f, 0xff, 0x7b, 0xff, 0x3d, 0x7f, 0xfc, 0xf8, 0x80, 0xe7, 0xf9, 0xf3, 0xcf, 0xf7, 0x00,
  0x00, 0xbe, 0xcf, 0x71, 0xef, 0x9d, 0x7f, 0xf8, 0x70, 0x00, 0xe7, 0xbc, 0x77, 0x8e, 0xe7, 0x00,
  0x00, 0xbe, 0xcf, 0x71, 0xcf, 0x9c, 0x63, 0xfc, 0x70, 0x00, 0xe7, 0x1c, 0x67, 0x8e, 0x6f, 0x00,
  0x00, 0xfe, 0xcf, 0x71, 0x3f, 0x9c, 0x03, 0xcc, 0x71, 0x00, 0xff, 0x1c, 0xe7, 0x87, 0x7f, 0x00,
  0x00, 0xfe, 0xcf, 0x71, 0xfc, 0x9c, 0x03, 0xfc, 0x71, 0x00, 0xff, 0x1c, 0xe7, 0x87, 0x7f, 0x00,
  0x00, 0xf6, 0xcd, 0x31, 0xf3, 0x9d, 0x03, 0xfe, 0x71, 0x06, 0xe7, 0x1c, 0x67, 0x8e, 0x7d, 0x00,
  0x00, 0xf6, 0x8e, 0x3b, 0xe7, 0x9d, 0x67, 0xce, 0x73, 0x06, 0xe7, 0xbc, 0x77, 0x9e, 0x79, 0x00,
  0x00, 0xff, 0x9e, 0x3f, 0xff, 0x3c, 0x7f, 0xcf, 0xff, 0x87, 0xe7, 0xf9, 0xf3, 0xde, 0x73, 0x00,
  0x00, 0xef, 0x1e, 0x1f, 0x7b, 0x3c, 0x3e, 0xcf, 0xff, 0x87, 0xe7, 0xf1, 0xf1, 0xdc, 0x73, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// '20241012_144353', 128x64px
const unsigned char polinesLogo [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x08, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x07, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x18, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x1f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x7c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x20, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xf8, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x30, 0x00, 0x08, 0x02, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0xc0, 0x0f, 0x00, 0x00, 
  0x00, 0x01, 0x10, 0x00, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x40, 0x02, 0x1f, 0x00, 0x00, 
  0x00, 0x04, 0x40, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x58, 0x02, 0x3c, 0x00, 0x00, 
  0x80, 0x08, 0x60, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x55, 0x07, 0x70, 0x00, 0x00, 
  0x00, 0x20, 0x20, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc1, 0x54, 0x87, 0xe0, 0x00, 0x00, 
  0x00, 0x40, 0x40, 0x00, 0x10, 0x01, 0x00, 0x00, 0x00, 0xe0, 0xc0, 0x07, 0xcc, 0xc1, 0x01, 0x00, 
  0x00, 0x80, 0xc0, 0x80, 0xff, 0x06, 0x00, 0x00, 0x00, 0x70, 0xb8, 0x00, 0x40, 0x83, 0x03, 0x00, 
  0x00, 0x02, 0x81, 0x40, 0x70, 0x1e, 0x00, 0x00, 0x00, 0x38, 0x18, 0x00, 0x80, 0x0d, 0x07, 0x00, 
  0x00, 0x04, 0x06, 0x20, 0xc0, 0x3e, 0x00, 0x00, 0x00, 0x1c, 0x38, 0x00, 0x00, 0x16, 0x0e, 0x00, 
  0x00, 0x08, 0x0e, 0x30, 0x80, 0xf7, 0x00, 0x00, 0x00, 0x0e, 0x03, 0x82, 0x20, 0x1a, 0x1e, 0x00, 
  0x00, 0x10, 0x13, 0x11, 0x00, 0xa7, 0x03, 0x00, 0x00, 0x4f, 0x0f, 0x83, 0x20, 0x04, 0x3c, 0x00, 
  0x00, 0x20, 0x31, 0x10, 0x00, 0xb6, 0x0d, 0x00, 0x80, 0xc7, 0x40, 0x83, 0xb0, 0x70, 0x78, 0x00, 
  0x00, 0x80, 0x40, 0x0a, 0x03, 0xe4, 0x3e, 0x00, 0xc0, 0x03, 0x63, 0x83, 0x30, 0x59, 0xf0, 0x00, 
  0x00, 0x00, 0x87, 0x0e, 0x06, 0x84, 0xd0, 0x00, 0xf0, 0xe1, 0x60, 0x83, 0xb0, 0x79, 0xe0, 0x01, 
  0x00, 0x00, 0x82, 0x07, 0x0e, 0x80, 0xd3, 0x00, 0x60, 0x80, 0x61, 0x02, 0xb0, 0x11, 0xc0, 0x03, 
  0x00, 0x00, 0xc4, 0x1b, 0x1e, 0x80, 0x04, 0x00, 0xe0, 0x40, 0xe0, 0x20, 0xc1, 0xc1, 0x80, 0x01, 
  0x00, 0x00, 0xe8, 0x1b, 0x3e, 0x88, 0x1c, 0x00, 0xe0, 0xa0, 0xe8, 0xa0, 0xc7, 0x25, 0xc1, 0x01, 
  0x00, 0x80, 0x74, 0x36, 0x38, 0x88, 0x29, 0x00, 0xe0, 0xa0, 0xc8, 0xf1, 0xc7, 0xc4, 0xc0, 0x01, 
  0x00, 0x40, 0x28, 0xec, 0x04, 0x80, 0x08, 0x00, 0xc0, 0x40, 0x98, 0xf9, 0x47, 0x06, 0xc0, 0x01, 
  0x00, 0x40, 0x70, 0x1c, 0x1f, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x78, 0x98, 0x0e, 0xc7, 0xc1, 0x00, 
  0x00, 0x40, 0xf4, 0x36, 0xe2, 0x01, 0x00, 0x00, 0xc0, 0xe0, 0xf0, 0xfc, 0xcf, 0x07, 0xc1, 0x00, 
  0x00, 0x00, 0xd6, 0xe3, 0x23, 0x00, 0x00, 0x00, 0xc0, 0xe1, 0xf4, 0x7d, 0xcf, 0x4b, 0xc0, 0x00, 
  0x00, 0x00, 0x9e, 0x41, 0x61, 0x00, 0x00, 0x00, 0xc0, 0xe1, 0xcd, 0xfd, 0xef, 0xc8, 0xc1, 0x00, 
  0x00, 0x00, 0x88, 0x54, 0x93, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x38, 0xfc, 0x0f, 0x0e, 0xe0, 0x00, 
  0x00, 0x00, 0xf8, 0x60, 0x9e, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf8, 0xf9, 0xe7, 0x07, 0xe0, 0x00, 
  0x00, 0x00, 0xf2, 0xc0, 0x3f, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xf0, 0xf7, 0xfb, 0x03, 0xe0, 0x00, 
  0x00, 0x00, 0x19, 0x85, 0x73, 0x00, 0x00, 0x00, 0xc0, 0x01, 0xc0, 0x87, 0xf8, 0x00, 0xe0, 0x00, 
  0x00, 0x80, 0x0c, 0x85, 0xe1, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x80, 0x00, 0x00, 0xe0, 0x00, 
  0x00, 0x80, 0x07, 0x4f, 0xca, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x98, 0x0e, 0x00, 0x60, 0x00, 
  0x00, 0x00, 0x9c, 0x51, 0xc4, 0x00, 0x00, 0x00, 0x80, 0x03, 0xd0, 0x9f, 0xfe, 0x06, 0x60, 0x00, 
  0x00, 0x00, 0x00, 0x31, 0x6f, 0x03, 0x00, 0x00, 0x80, 0x03, 0xd8, 0x9f, 0xfe, 0x0f, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0xe5, 0x1f, 0x06, 0x00, 0x00, 0x00, 0x03, 0xd8, 0xdf, 0xfe, 0x0f, 0x70, 0x00, 
  0x00, 0x00, 0x00, 0xe0, 0xcf, 0x05, 0x00, 0x00, 0x00, 0x07, 0xd8, 0x1f, 0xfe, 0x0f, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0xc0, 0x87, 0x0f, 0x00, 0x00, 0x00, 0x07, 0x98, 0x1f, 0x3e, 0x0b, 0x38, 0x00, 
  0x00, 0x00, 0x00, 0x80, 0xc1, 0x3f, 0x00, 0x00, 0x00, 0x0e, 0xc0, 0x13, 0xfa, 0x01, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x1e, 0x1e, 0x00, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xf8, 0x43, 0x07, 0x00, 0x00, 0x1c, 0x0c, 0x00, 0x00, 0x00, 0x0e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x03, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xec, 0x00, 0x80, 0x0d, 0x07, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xd0, 0x95, 0xed, 0x87, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xe0, 0xb7, 0xbf, 0x81, 0x01, 0x00, 
  0x00, 0x1f, 0xcf, 0xb0, 0xcf, 0x37, 0xf6, 0x01, 0x00, 0xe0, 0x00, 0xbd, 0x1d, 0xc0, 0x01, 0x00, 
  0x00, 0xb3, 0xdd, 0xb0, 0xcd, 0x30, 0xbb, 0x01, 0x00, 0xe0, 0x00, 0xa0, 0x00, 0xc0, 0x01, 0x00, 
  0x00, 0xf3, 0xd8, 0xb0, 0xd9, 0x63, 0x1b, 0x03, 0x00, 0xc0, 0x3f, 0x00, 0x00, 0xff, 0x00, 0x00, 
  0x00, 0xff, 0xd8, 0xb0, 0xcf, 0xe3, 0x19, 0x03, 0x00, 0xc0, 0xff, 0x07, 0xf0, 0xff, 0x00, 0x00, 
  0x00, 0x8f, 0xd9, 0xb0, 0x4f, 0xe0, 0xb9, 0x01, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x87, 0x00, 0x00, 
  0x00, 0x83, 0xcf, 0xb7, 0xcd, 0xc7, 0xf0, 0x01, 0x00, 0x00, 0x00, 0xff, 0x3f, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  u8g2.setI2CAddress(0x78);
  u8g2.begin(); // start the u8g2 library
  Serial.begin(115200);

  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFontMode(1);
    u8g2.setBitmapMode(1);
    u8g2.setFont(u8g2_font_helvB08_tr);
    u8g2.drawStr(105, 8, "V3.1");
    u8g2.drawXBMP(0, 0, 128, 64, polinesLogo);
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any
//  u8g2.sendBuffer();
  delay(3000);
  for (int i = 0; i <= 100; i = i + 5) {
    u8g2.firstPage();
      do {
        u8g2.clearBuffer();
        u8g2.drawXBMP(0, 0, 128, 45, polinesLogo);
        u8g2.drawRFrame(10, 48, 108, 14, 3); // Draw the frame of the progress bar
        u8g2.drawBox(12, 50, i, 10); // Draw the progress bar fill
      } while ( u8g2.nextPage() ); // Continue drawing on the next page if any
//        u8g2.updateDisplayArea(0, 6, 16, 2);  //tile_area_x_pos, tile_area_y_pos, tile_area_width, tile_area_height
  }
//  u8g2.clearBuffer();
//  u8g2.sendBuffer();
}

void loop() {
  unsigned long startTime = millis();
  
  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_5x8_tr);
    u8g2.drawStr(1, 7, "AL-ISRA MUSICAL HORN");
    u8g2.drawXBMP(105, 2, 7, 5, image_arrow_curved_left_down_up_bits);
    u8g2.drawXBMP(117, 0, 9, 8, image_Hidden_window_bits);
    u8g2.drawLine(0, 8, 128, 8);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(48, 33, "02");
    u8g2.drawRFrame(46, 12, 35, 23, 3);
    u8g2.setFont(u8g2_font_t0_17b_tr);
  //  u8g2.drawStr(37, 49, "PLAYED");
    u8g2.drawStr(46, 49, "STOP");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(106, 24, "+");
    u8g2.drawRFrame(36, 36, 56, 15, 2);
    u8g2.drawStr(107, 52, "-");
    u8g2.drawXBMP(1, 15, 9, 7, image_Pin_arrow_left_bits);
    u8g2.drawXBMP(1, 43, 9, 7, image_Pin_arrow_left_bits);
    u8g2.setFont(u8g2_font_t0_11_tr);
    u8g2.drawStr(109, 37, "NUM");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(11, 24, "+");
    u8g2.drawStr(11, 52, "-");
    u8g2.drawXBMP(118, 15, 9, 7, image_Pin_arrow_right_bits);
    u8g2.drawXBMP(118, 43, 9, 7, image_Pin_arrow_right_bits);
    u8g2.setFont(u8g2_font_5x7_tr);
    u8g2.drawStr(1, 36, "TEMPO");
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(1, 63, "DO");
    u8g2.drawStr(22, 63, "RE");
    u8g2.drawStr(43, 63, "MI");
    u8g2.drawStr(64, 63, "FA");
    u8g2.drawStr(85, 63, "SOL");
    u8g2.drawStr(113, 63, "LA");
//    u8g2.sendBuffer();
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any

  delay(3000);
  
  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_5x8_tr);
    u8g2.drawStr(1, 7, "AL-ISRA MUSICAL HORN");
    u8g2.drawXBMP(105, 2, 7, 5, image_arrow_curved_left_down_up_bits);
    u8g2.drawXBMP(117, 0, 9, 8, image_Hidden_window_bits);
    u8g2.drawLine(0, 8, 128, 8);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(48, 33, "02");
    u8g2.drawRFrame(46, 12, 35, 23, 3);
    u8g2.setFont(u8g2_font_t0_17b_tr);
    u8g2.drawStr(37, 49, "PLAYED");
  //  u8g2.drawStr(46, 49, "STOP");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(106, 24, "+");
    u8g2.drawRFrame(36, 36, 56, 15, 2);
    u8g2.drawStr(107, 52, "-");
    u8g2.drawXBMP(1, 15, 9, 7, image_Pin_arrow_left_bits);
    u8g2.drawXBMP(1, 43, 9, 7, image_Pin_arrow_left_bits);
    u8g2.setFont(u8g2_font_t0_11_tr);
    u8g2.drawStr(109, 37, "NUM");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(11, 24, "+");
    u8g2.drawStr(11, 52, "-");
    u8g2.drawXBMP(118, 15, 9, 7, image_Pin_arrow_right_bits);
    u8g2.drawXBMP(118, 43, 9, 7, image_Pin_arrow_right_bits);
    u8g2.setFont(u8g2_font_5x7_tr);
    u8g2.drawStr(1, 36, "TEMPO");
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(1, 63, "DO");
    u8g2.drawStr(22, 63, "RE");
    u8g2.drawStr(43, 63, "MI");
    u8g2.drawStr(64, 63, "FA");
    u8g2.drawStr(85, 63, "SOL");
    u8g2.drawStr(113, 63, "LA");
//    u8g2.sendBuffer();
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any

  delay(3000);

  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_5x8_tr);
    u8g2.drawStr(1, 7, "AL-ISRA MUSICAL HORN");
    u8g2.drawXBMP(105, 2, 7, 5, image_arrow_curved_left_down_up_bits);
    u8g2.drawXBMP(117, 0, 9, 8, image_Hidden_window_bits);
    u8g2.drawLine(0, 8, 128, 8);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(48, 33, "02");
    u8g2.drawRFrame(46, 12, 35, 23, 3);
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(32, 48, "RECORDING");
    u8g2.drawRFrame(30, 36, 68, 15, 2);
    u8g2.drawStr(1, 63, "DO");
    u8g2.drawStr(22, 63, "RE");
    u8g2.drawStr(43, 63, "MI");
    u8g2.drawStr(64, 63, "FA");
    u8g2.drawStr(85, 63, "SOL");
    u8g2.drawStr(113, 63, "LA");
//    u8g2.sendBuffer();
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any

  delay(3000);

  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_5x8_tr);
    u8g2.drawStr(1, 7, "AL-ISRA MUSICAL HORN");
    u8g2.drawXBMP(105, 2, 7, 5, image_arrow_curved_left_down_up_bits);
    u8g2.drawXBMP(117, 0, 9, 8, image_Hidden_window_bits);
    u8g2.drawLine(0, 8, 128, 8);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(48, 33, "02");
    u8g2.drawRFrame(46, 12, 35, 23, 3);
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(28, 48, "CHOOSE NUM");
  //  u8g2.drawStr(32, 48, "SAVING...");
    u8g2.drawRFrame(26, 36, 74, 15, 2);
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(106, 24, "+");
    u8g2.drawStr(107, 52, "-");
    u8g2.drawXBMP(118, 15, 9, 7, image_Pin_arrow_right_bits);
    u8g2.drawXBMP(118, 43, 9, 7, image_Pin_arrow_right_bits);
    u8g2.setFont(u8g2_font_t0_11_tr);
    u8g2.drawStr(109, 37, "NUM");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(11, 24, "+");
    u8g2.drawStr(11, 52, "-");
    u8g2.drawXBMP(1, 43, 9, 7, image_Pin_arrow_left_bits);
    u8g2.drawXBMP(1, 15, 9, 7, image_Pin_arrow_left_bits);
    u8g2.setFont(u8g2_font_5x7_tr);
    u8g2.drawStr(1, 36, "TEMPO");
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(1, 63, "DO");
    u8g2.drawStr(22, 63, "RE");
    u8g2.drawStr(43, 63, "MI");
    u8g2.drawStr(64, 63, "FA");
    u8g2.drawStr(85, 63, "SOL");
    u8g2.drawStr(113, 63, "LA");
//    u8g2.sendBuffer();
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any

  delay(3000);
  
  u8g2.firstPage();
  do {
    u8g2.clearBuffer();
    u8g2.setFont(u8g2_font_5x8_tr);
    u8g2.drawStr(1, 7, "AL-ISRA MUSICAL HORN");
    u8g2.drawXBMP(105, 2, 7, 5, image_arrow_curved_left_down_up_bits);
    u8g2.drawXBMP(117, 0, 9, 8, image_Hidden_window_bits);
    u8g2.drawLine(0, 8, 128, 8);
    u8g2.setFont(u8g2_font_profont29_tr);
    u8g2.drawStr(48, 33, "02");
    u8g2.drawRFrame(46, 12, 35, 23, 3);
    u8g2.setFont(u8g2_font_t0_14b_tr);
  //  u8g2.drawStr(28, 48, "CHOOSE NUM");
    u8g2.drawStr(32, 48, "SAVING...");
    u8g2.drawRFrame(26, 36, 74, 15, 2);
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(106, 24, "+");
    u8g2.drawStr(107, 52, "-");
    u8g2.drawXBMP(118, 15, 9, 7, image_Pin_arrow_right_bits);
    u8g2.drawXBMP(118, 43, 9, 7, image_Pin_arrow_right_bits);
    u8g2.setFont(u8g2_font_t0_11_tr);
    u8g2.drawStr(109, 37, "NUM");
    u8g2.setFont(u8g2_font_t0_22b_tr);
    u8g2.drawStr(11, 24, "+");
    u8g2.drawStr(11, 52, "-");
    u8g2.drawXBMP(1, 43, 9, 7, image_Pin_arrow_left_bits);
    u8g2.drawXBMP(1, 15, 9, 7, image_Pin_arrow_left_bits);
    u8g2.setFont(u8g2_font_5x7_tr);
    u8g2.drawStr(1, 36, "TEMPO");
    u8g2.setFont(u8g2_font_t0_14b_tr);
    u8g2.drawStr(1, 63, "DO");
    u8g2.drawStr(22, 63, "RE");
    u8g2.drawStr(43, 63, "MI");
    u8g2.drawStr(64, 63, "FA");
    u8g2.drawStr(85, 63, "SOL");
    u8g2.drawStr(113, 63, "LA");
//    u8g2.sendBuffer();
  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any

  delay(3000);
}


//u8g2.firstPage();
//  do {
//    u8g2.clearBuffer(); // Clear the internal memory
//    u8g2.setFont(u8g2_font_helvB08_tr);
//    u8g2.drawFrame(10, 25, 108, 14); // Draw the frame of the progress bar
//    u8g2.drawBox(12, 27, progress, 10); // Draw the progress bar fill
//    sprintf(buffer, "Progress: %d%%", progress); // Construct a string with the progress variable
//    u8g2.drawStr(40, 55, buffer); // Display the percentage
//  } while ( u8g2.nextPage() ); // Continue drawing on the next page if any
